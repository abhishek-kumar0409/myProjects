heat_template_version: 2015-04-30
description: Heat template to bring up the vMX which is composed of vRE (routing engine) and vPFE (forwarding engine) VMs


parameters:
  vmx_ident:
    type: string
    description: Identifier for vmx
    default: vmx1
  hostname_re:
    description: Hostname of RE
    type: string
    default: vmx_re0
  vmx_vre_name:
    type: string
    description: VM Name for the vRE name
    default: vmx1_re0
  vmx_vpfe_name:
    type: string
    description: VM Name for the vPFE name
    default: vmx1_fpc
  vmx_vre_img:
    type: string
    description: Image stored in glance to support the vRE VM
    default: vre-img-15.1F5-S1
  vmx_vpfe_img:
    type: string
    description: Image stored in glance to support the vPFE VM
    default: vpfe-15.1F5-S1
  vmx_vre_flavor:
    type: string
    description: Flavor created to support the vRE VM
    default: m1.small
  vmx_vpfe_flavor:
    type: string
    description: Flavor created to support the vPFE VM 
    default: vmx.vfp1
  vmx_oam_network:
    type: string
    description: Public network name or ID
    default: 9812c641-5b3a-4375-a54d-67685578ade0
  ge000_network:
    type: string
    description: CIDR of GE000 network
    default: 3fa4a0e0-c807-4892-9915-3eaf419a7f06
  ge001_network:
    type: string
    description: CIDR of GE001 network
    default: 8efceb35-31b9-4e1e-b63a-1f83aee1dc3e


resources:

  vmx_vre_oam_port_1:
    type: OS::Neutron::Port
    properties:
      network: { get_param: vmx_oam_network }

  vmx_vpfe_oam_port_1:
    type: OS::Neutron::Port
    properties:
      network: { get_param: vmx_oam_network }

  vmx_internalnet_id:
    type: OS::Neutron::Net
#    properties:
#      name: vmx_internalnet_id

  vmx_internalnet_subnet_id:
    type: OS::Neutron::Subnet
    properties:
#      name: vmx_internalnet_subnet_id
      network_id: { get_resource: vmx_internalnet_id }
      cidr: 128.0.0.0/16
      enable_dhcp: False
#      gateway_ip: 128.0.0.3

  vmx_vre_internalnet_port_1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: vmx_internalnet_id }
      fixed_ips:
        - ip_address: 128.0.0.1

  vmx_vpfe_internalnet_port_1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: vmx_internalnet_id }
      fixed_ips:
        - ip_address: 128.0.0.16

  ge000_port:
      type: OS::Neutron::Port
      properties:
        network: {get_param: ge000_network}
#        vnetwork_id: {get_attr: [ge000_network, bridge_network]} 

  ge001_port:
      type: OS::Neutron::Port
      properties:
        network: {get_param: ge001_network}
#        vnetwork_id: {get_attr: [ge000_network, bridge_network]} 

  instance_vre:
    type: OS::Nova::Server
    properties:
      name: { get_param: vmx_vre_name}
      image: { get_param:  vmx_vre_img }
      flavor: { get_param:  vmx_vre_flavor }
      networks:
      - port: { get_resource: vmx_vre_oam_port_1 }
      - port: { get_resource: vmx_vre_internalnet_port_1 }
      config_drive: 'true'
      metadata:
        gateway: 100.100.1.1
        hostname: {get_param: hostname_re}
        re0_ip: {get_attr: [vmx_vre_oam_port_1, fixed_ips, 0, ip_address]}
        netmask: '24'
        vm_chassis_i2cid: '161'
        vm_chassisname: {get_param: vmx_ident}
        vm_chassname: {get_param: vmx_ident}
        vm_instance: 0
        vm_is_virtual: 1
        vm_ore_present: 0
        vm_retype: RE-VMX
        vmtype: 0
#        console: vidconsole
      personality: {
        /var/db/cumulus/baseline_config.template: {get_file: /root/vmx_baseline.conf},
        /config/license/JUNOS773156.lic: { get_file: /root/Virtual_Junos.txt }}

  instance_vpfe:
    type: OS::Nova::Server
    properties:
      name: { get_param: vmx_vpfe_name }
      image: { get_param:  vmx_vpfe_img }
      flavor: { get_param:  vmx_vpfe_flavor }
      networks:
      - port: { get_resource: vmx_vpfe_oam_port_1 }
      - port: { get_resource: vmx_vpfe_internalnet_port_1 }
      - port: { get_resource: ge000_port}
      - port: { get_resource: ge001_port}
